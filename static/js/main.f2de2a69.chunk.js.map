{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","utils/useFavorites.js","components/UserList/UserList.js","pages/Home/style.js","components/FavouritesList/style.js","components/FavouritesList/FavouritesList.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","useFavorites","useState","hoveredUserId","setHoveredUserId","JSON","parse","localStorage","getItem","favoritesUsers","setFavoritesUsers","favoritesUUIDs","setFavoritesUUIDs","isUserInFavorites","uuid","includes","useEffect","setItem","stringify","switchFavorites","user","index","login","updatedFavorites","filter","fav","updatedFavoritesUUIDs","id","console","log","prev","handleMouseEnter","handleMouseLeave","useStyles","makeStyles","theme","root","flexGrow","paper","height","width","padding","spacing","users","isLoading","handleFetch","favourites","handleFavourites","nationalities","countries","selectedNationalities","setSelectedNationalities","classes","page","setPage","handleLoadMore","handleScroll","e","a","x","target","scrollHeight","scrollTop","y","clientHeight","bottom","more","Grid","container","justify","className","item","xs","xl","map","country","nat","window","event","length","natItem","onScroll","onMouseEnter","onMouseLeave","style","src","picture","large","alt","name","title","first","last","email","location","street","number","city","onClick","handleClickFavourites","IconButton","Home","Content","Header","FavouritesList","CSVLinkrWrapper","headers","key","data","indexOf","props","setUsers","setIsLoading","fetchUsers","axios","get","toString","response","results","usePeopleFetch","tab","ThemeProvider","overrides","MuiTab","backgroundColor","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","value","handleChange","AppBar","position","top","whiteSpace","Tabs","aria-label","indicatorColor","textColor","Tab","AppRouter","currentTab","setCurrentTab","setValue","_e","newValue","exact","path","render","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.f2de2a69.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label\n}) => {\n  const handleChange = () => {\n    onChange && onChange()\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  align-items: stretch;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  width: 100%;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: max-content;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  width: 100%;\r\n  height: 128px;\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\n\nconst useFavorites = () => {\n  // console.log(\"useFavotie called\");\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const [favoritesUsers, setFavoritesUsers] = useState(\n    JSON.parse(localStorage.getItem(\"favorites\")) || []\n  );\n  const [favoritesUUIDs, setFavoritesUUIDs] = useState(\n    JSON.parse(localStorage.getItem(\"favoritesUUIs\")) || []\n  );\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  const isUserInFavorites = (uuid) => {\n    return favoritesUUIDs.includes(uuid);\n  };\n\n  const switchFavorites = (user, index) => {\n    // debugger\n    setFavoritesUsers(JSON.parse(localStorage.getItem(\"favorites\")));\n    setFavoritesUUIDs(JSON.parse(localStorage.getItem(\"favoritesUUIs\")));\n\n    const uuid = user.login.uuid;\n    // check if user is in not favorites list\n    if (!isUserInFavorites(uuid)) {\n      console.log(favoritesUsers);\n      console.log(favoritesUUIDs);\n      setFavoritesUUIDs((prev) => [...prev, uuid]);\n      setFavoritesUsers((prev) => [...prev, user]);\n    } else {\n      //remove from favorites\n      const updatedFavorites = [...favoritesUsers].filter(\n        (fav) => fav.login.uuid !== uuid\n      );\n      const updatedFavoritesUUIDs = [...favoritesUUIDs].filter((id) => id !== uuid);\n      setFavoritesUsers(updatedFavorites);\n      setFavoritesUUIDs(updatedFavoritesUUIDs);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favoritesUsers));\n    localStorage.setItem(\"favoritesUUIs\", JSON.stringify(favoritesUUIDs));\n  }, [favoritesUsers, favoritesUUIDs]);\n\n  return {\n    favoritesUsers,\n    favoritesUUIDs,\n    switchFavorites,\n    isUserInFavorites,\n    handleMouseEnter,\n    handleMouseLeave,\n    hoveredUserId,\n  };\n};\nexport default useFavorites","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\nimport useFavorites from \"utils/useFavorites\";\nimport { Grid } from \"@material-ui/core\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\n\nconst UserList = ({ users, isLoading, handleFetch, favourites, handleFavourites, nationalities, countries\n}) => {\n  const [selectedNationalities, setSelectedNationalities] = useState([]);\n  const classes = useStyles();\n  const {\n    handleMouseEnter,\n    handleMouseLeave,\n    hoveredUserId,\n  } = useFavorites()\n\n\n  const handleCheckboxClick = (nat) => {\n    if (window.event.target.checked) {\n      setSelectedNationalities(selectedNationalities => [...selectedNationalities, nat]);\n      handleFetch([...selectedNationalities, nat])\n    } else {\n      nat = selectedNationalities.length === 1 ?\n        [] : selectedNationalities.filter((natItem) => natItem !== nat)\n      setSelectedNationalities(nat);\n      handleFetch(nat)\n    }\n  }\n\n  const handleClickFavourites = (index) => {\n    handleFavourites(index);\n  }\n\n  const [page, setPage] = useState(1);\n  const handleLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  const handleScroll = async (e) => {\n    // checks position on list: if reached bottom -> load more users\n    const x = e.target.scrollHeight - e.target.scrollTop\n    const y = e.target.clientHeight;\n    // console.log(x, y)\n    const bottom = x - 50 <= y\n    if (handleLoadMore && (bottom)) {\n      handleLoadMore()\n    }\n  };\n  useEffect(() => {\n    async function more() {\n      await handleFetch(selectedNationalities, page)\n    }\n    more()\n  }, [page])\n\n  useEffect(() => {\n    setPage(1);\n  }, [selectedNationalities])\n\n  return (\n\n    <Grid container justify=\"center\" className={classes.root} >\n      <Grid item xs={12}>\n        <Grid container justify=\"center\"  >\n          <Grid item xl={12}>\n            <S.UserList>\n              <S.Filters>\n                {countries.map((country, index) => {\n                  return (<CheckBox key={index}\n                    label={country} onChange={() => handleCheckboxClick(nationalities[index])} />)\n                })}\n              </S.Filters>\n              <S.List onScroll={handleScroll}>\n                {users.map((user, index) => {\n\n                  const uuid = user.login.uuid;\n                  return (\n                    <S.User\n                      key={index}\n                      onMouseEnter={() => handleMouseEnter(index)}\n                      onMouseLeave={handleMouseLeave}\n                    >\n                      <div style={{ height: \"100%\" }}>\n                        <S.UserPicture src={user?.picture.large} alt=\"\" />\n                      </div>\n\n                      <S.UserInfo>\n                        <Text size=\"22px\" bold>\n                          {user?.name.title} {user?.name.first} {user?.name.last}\n                        </Text>\n                        <Text size=\"14px\">{user?.email}</Text>\n                        <Text size=\"14px\">\n                          {user?.location.street.number} {user?.location.street.name}\n                        </Text>\n                        <Text size=\"14px\">\n                          {user?.location.city} {user?.location.country}\n                        </Text>\n                      </S.UserInfo>\n\n                      <S.IconButtonWrapper\n                        isVisible={true}\n                        onClick={() => handleClickFavourites(user, index)}>\n                        <IconButton>\n                          <FavoriteIcon\n                            color={(favourites.includes(uuid) || (index === hoveredUserId)) ? \"error\" : \"action\"}\n                          />\n                        </IconButton>\n                      </S.IconButtonWrapper>\n                    </S.User>\n                  );\n                })}\n                {isLoading && (\n                  <S.SpinnerWrapper>\n                    <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n                  </S.SpinnerWrapper>\n                )}\n              </S.List>\n            </S.UserList>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid >\n\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport const FavouritesList = styled.div`\ndisplay: flex;\nalign-items: stretch;\nflex-direction: column;\n`;\n\nexport const List = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 35px;\nwidth: 500px;\nwidth: 100%;\nheight: calc(100vh - 270px);\nmargin-block-start: 30px;\noverflow-y: auto;\n`;\n\nexport const User = styled.div`\ndisplay: flex;\nflex-wrap: nowrap;\njustify-content: center;\ngap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n   display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: max-content;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\nwidth: 100%;\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n\n\nexport const CSVLinkrWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  top: 3rem;\n  right: 0;\n  margin: 0;\n  font-size: 0.8rem;\n  padding: 0.7rem;\n  text-align: center;\n\n  > a {\n    display: flex;\n    text-decoration: none;\n    color: #84ffff;\n    font-size: 1.1rem;\n    font-weight: bold;\n  }\n`;","import React, { useState } from \"react\";\nimport Text from \"components/Text\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nimport * as S from \"./style\";\nimport CheckBox from \"components/CheckBox\";\n\nimport { CSVLink } from \"react-csv\";\nconst headers = [\n  { label: \"First Name\", key: \"name.first\" },\n  { label: \"Last Name\", key: \"name.last\" },\n  { label: \"Email\", key: \"email\" },\n  { label: \"Phone\", key: \"name.phone\" },\n  { label: \"Birth Date\", key: \"dob.date\" },\n  { label: \"Age\", key: \"dob.age\" },\n  { label: \"Country\", key: \"location.city\" },\n  { label: \"City\", key: \"location.country\" },\n  { label: \"City\", key: \"location.country\" },\n  { label: \"Time Zone Offset\", key: \"location.timezone.offset\" },\n  { label: \"Free Text\", key: \"freeTextInput\" },\n];\nconst FavouritesList = ({ users, handleFavourites, countries, nationalities }) => {\n\n  const [selectedNationalities, setSelectedNationalities] = useState([]);\n\n  const handleCheckboxClick = (nat) => {\n    if (window.event.target.checked) {\n      setSelectedNationalities(selectedNationalities => [...selectedNationalities, nat]);\n    } else {\n      setSelectedNationalities(selectedNationalities.length === 1 ?\n        [] : selectedNationalities.filter((natItem) => natItem !== nat));\n    }\n  }\n\n  return (\n    <S.FavouritesList>\n      <S.Filters>\n        {countries.map((country, index) => {\n          return (<CheckBox key={index}\n            label={country} onChange={() => handleCheckboxClick(nationalities[index])} />)\n        })}\n      </S.Filters>\n      {users?.length && <S.CSVLinkrWrapper >\n        <CSVLink data={users} headers={headers}>\n          Download to CSV\n          <GetAppIcon color=\"primary\" />\n        </CSVLink>\n      </S.CSVLinkrWrapper> || \"\"}\n      <S.List>\n        {users?.length ? users.map((user, index) => {\n          if (selectedNationalities.length > 0 && selectedNationalities.indexOf(user.nat) < 0) return \"\"\n          else\n            return (\n              <S.User\n                key={index}\n              >\n\n                <div style={{ height: \"100%\" }}>\n                  <S.UserPicture src={user?.picture.large} alt=\"\" />\n                </div>\n                <S.UserInfo>\n                  <Text size=\"22px\" bold>\n                    {user?.name.title} {user?.name.first} {user?.name.last}\n                  </Text>\n                  <Text size=\"14px\">{user?.email}</Text>\n                  <Text size=\"14px\">\n                    {user?.location.street.number} {user?.location.street.name}\n                  </Text>\n                  <Text size=\"14px\">\n                    {user?.location.city} {user?.location.country}\n                  </Text>\n                </S.UserInfo>\n                <S.IconButtonWrapper isVisible={true} onClick={() => handleFavourites(user, index)}>\n                  <IconButton>\n                    <FavoriteIcon color=\"error\" />\n                  </IconButton>\n                </S.IconButtonWrapper>\n              </S.User>\n            )\n        }) : <Text size=\"40px\" bold>\n          No Favourite found\n        </Text>}\n      </S.List>\n    </S.FavouritesList>\n  );\n};\n\nexport default FavouritesList;\n","import { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport useFavorites from \"utils/useFavorites\"\nimport * as S from \"./style\";\nimport FavouriteList from \"components/FavouritesList\";\nimport { Grid } from \"@material-ui/core\";\nconst countries = [\"Brazil\", \"Australia\", \"Canada\", \"Germany\", \"Norway\", \"United States\"];\nconst nationalities = [\"BR\", \"AU\", \"CA\", \"DE\", \"NO\", \"US\"];\n\nconst Home = (props) => {\n  const { users, isLoading, fetchUsers } = usePeopleFetch();\n\n  const {\n    favoritesUsers,\n    favoritesUUIDs,\n    switchFavorites,\n  } = useFavorites()\n\n  const handleFetch = async (nationalities, page) => {\n    await fetchUsers(nationalities, page)\n  }\n\n\n\n  return (\n    <S.Home>\n      <S.Content>\n        <Grid container>\n          <Grid item xs={12}>\n\n            <Grid container justify=\"center\">\n              <Grid item>\n                <S.Header>\n                  <Text size=\"5rem\" bold>\n                    {props.tab === 0 ? \"PplFinder\" : \"Favourites\"}\n                  </Text>\n                </S.Header>\n                {props.tab === 0 ?\n                  <UserList\n                    users={users}\n                    isLoading={isLoading}\n                    favourites={favoritesUUIDs}\n                    handleFavourites={switchFavorites}\n                    handleFetch={handleFetch}\n                    countries={countries}\n                    nationalities={nationalities}\n                  />\n\n                  : <FavouriteList\n                    users={favoritesUsers}\n                    favourites={favoritesUUIDs}\n                    handleFavourites={switchFavorites}\n                    countries={countries}\n                    nationalities={nationalities}\n                  />\n                }\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  async function fetchUsers(nationalities, page = 1) {\n    setIsLoading(true);\n    const response = await axios.get(`https://randomuser.me/api/?${nationalities && \"nat=\" + nationalities.toString() + \"&\" || \"\"}results=5&page=${page}`);\n    setIsLoading(false);\n    setUsers(page === 1 ? response.data.results : [...users, ...response.data.results]);\n\n  }\n\n  return { users, isLoading, fetchUsers };\n};\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst NavBar = (props) => {\n  const { value, handleChange } = props\n  return (\n    <AppBar position=\"static\" color=\"#303030\" style={{ position: \"fixed\", top: 0 }}>\n\n      <Typography variant=\"h4\" style={{\n        whiteSpace: \"pre-wrap\"\n      }}>\n        Made with  <span style={{ color: \"red\" }}>love ♥</span>  by <span style={{ color: \"greenyellow\" }}>Yair levi!</span>\n      </Typography>\n\n\n\n\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" index={0} />\n        <Tab label=\"Favorites\" index={1} />\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\n\nconst AppRouter = () => {\n  const [currentTab, setCurrentTab] = useState(0)\n\n  const handleChange = (_e, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar value={currentTab} setValue={setCurrentTab} handleChange={handleChange} />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home tab={currentTab} />} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}